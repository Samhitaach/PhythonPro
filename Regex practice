Function	Description
findall	Returns a list containing all matches
search	Returns a Match object if there is a match anywhere in the string
split	Returns a list where the string has been split at each match
sub	Replaces one or many matches with a string

Metacharacters
Metacharacters are characters with a special meaning:

Character	Description	Example	
[]	A set of characters	"[a-m]"	
\	Signals a special sequence (can also be used to escape special characters)	"\d"	
.	Any character (except newline character)	"he..o"	
^	Starts with	"^hello"	
$	Ends with	"planet$"	
*	Zero or more occurrences	"he.*o"	
+	One or more occurrences	"he.+o"	
?	Zero or one occurrences	"he.?o"	
{}	Exactly the specified number of occurrences	"he.{2}o"	
|	Either or	"falls|stays"	
()	Capture and group	 

Special Sequences
A special sequence is a \ followed by one of the characters in the list below, and has a special meaning:

Character	Description	Example	Try it
\A	Returns a match if the specified characters are at the beginning of the string	"\AThe"	
\b	Returns a match where the specified characters are at the beginning or at the end of a word
(the "r" in the beginning is making sure that the string is being treated as a "raw string")	r"\bain"

r"ain\b"	

\B	Returns a match where the specified characters are present, but NOT at the beginning (or at the end) of a word
(the "r" in the beginning is making sure that the string is being treated as a "raw string")	r"\Bain"

r"ain\B"	

\d	Returns a match where the string contains digits (numbers from 0-9)	"\d"	
\D	Returns a match where the string DOES NOT contain digits	"\D"	
\s	Returns a match where the string contains a white space character	"\s"	
\S	Returns a match where the string DOES NOT contain a white space character	"\S"	
\w	Returns a match where the string contains any word characters (characters from a to Z, digits from 0-9, and the underscore _ character)	"\w"	
\W	Returns a match where the string DOES NOT contain any word characters	"\W"	
\Z	Returns a match if the specified characters are at the end of the string	"Spain\Z"	
Sets
A set is a set of characters inside a pair of square brackets [] with a special meaning:

Set	Description	Try it
[arn]	Returns a match where one of the specified characters (a, r, or n) is present	
[a-n]	Returns a match for any lower case character, alphabetically between a and n	
[^arn]	Returns a match for any character EXCEPT a, r, and n	
[0123]	Returns a match where any of the specified digits (0, 1, 2, or 3) are present	
[0-9]	Returns a match for any digit between 0 and 9	
[0-5][0-9]	Returns a match for any two-digit numbers from 00 and 59	
[a-zA-Z]	Returns a match for any character alphabetically between a and z, lower case OR upper case	
[+]	In sets, +, *, ., |, (), $,{} has no special meaning, so [+] means: return a match for any + character in the string

import re
str="GAIDEN 4 Preorder Standard Edition"
#Check if the string starts with "GAIDEN" with \A:
z=re.findall("\AGAIDEN",str)
if z:
    print("Match found")
else:
     print("No Match found")

str="GAIDEN 4 Preorder Standard Edition with ^"
z=re.findall("^GAIDEN",str)
if z:
    print("Match found")
else:
     print("No Match found")
txt = "Ã…land"
#Find all ASCII matches:
#Same result using the shorthand re.A flag:
print(re.findall("\w", txt, re.A))

#Check if the string has any a, r, or n characters:
p=re.findall([ark],str)
txt = "The rain in Spain"
#Check if the string has other characters than a, r, or n:
x = re.findall("[^arn]", txt)
#Returns a match for any digit except specified digits (0, 1, 2, or 3) are present
p=re.findall([0123],str)
txt = "8 times before 11:45 AM"
#Check if the string has any two-digit numbers, from 00 to 59:
x = re.findall("[0-5][0-9]", txt)
#Find all lower case characters alphabetically between "a" and "m":
x = re.findall("[a-m]", txt)
txt = "The rain in Spain"
Returns a match where the specified characters "ain" are at the beginning or at the end of a word
(the "r" in the beginning is making sure that the string is being treated as a "raw string")
x = re.findall(r"ain\b", txt)
#Check if "ain" is present, but NOT at the end of a word: Output: No Match found as ain is at the end
x = re.findall(r"ain\B", txt)
#Search for a sequence that starts with "sp", followed by 1 or more  (any) characters, and an "n":
h=re.findall("sp.+n") #  ['ain in Spain'] 
#Search for a sequence that starts with "sp", followed by 0 or  1 character, and an "n":
x = re.findall("sp.?n", txt)
